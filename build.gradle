plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.+'
    id 'net.minecraftforge.gradle' version '6.0.+'
    id 'wtf.gofancy.fancygradle' version '1.1.+'
}

fancyGradle {
    patches {
        asm
        codeChickenLib
        coremods
        mergetool
        resources
    }
}

version = "${project.minecraft_version}-${project.mod_version}"
group = maven_group
archivesBaseName = base_name

java.toolchain.getLanguageVersion().set(JavaLanguageVersion.of(8))

minecraft {
    mappings channel: 'stable', version: forge_mappings
    accessTransformer = file("src/main/resources/META-INF/${at_file}.cfg")
    runs {
        client {
            workingDirectory file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    maven {
        name = 'CurseForge'
        url = uri('https://www.cursemaven.com')
        content {
            includeGroup 'curse.maven'
        }
    }
    flatDir {
        dirs 'build/libs'
    }
}

configurations {
    shade
    implementation.extendsFrom shade
    shadow.extendsFrom shade
}

dependencies {
    minecraft("net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}")
    shade(fg.deobf("com.gildedgames.orbis:orbis-lib:${project.orbis_version}"))

    // Runtime only stuff for easier testing
    runtimeOnly(fg.deobf("curse.maven:bookshelf-228525:${project.bookshelf_version}"))
    runtimeOnly(fg.deobf("curse.maven:brandons-core-231382:${project.bc_version}"))
    runtimeOnly(fg.deobf("curse.maven:caliper-266824:${project.caliper_version}"))
    runtimeOnly(fg.deobf("curse.maven:codechicken-lib-242818:${project.ccl_version}"))
    runtimeOnly(fg.deobf("curse.maven:had-enough-items-557549:${project.hei_version}"))
    runtimeOnly(fg.deobf("curse.maven:redstone-flux-270789:${project.rf_version}"))
    runtimeOnly(fg.deobf("curse.maven:the-one-probe-245211:${project.top_version}"))
}

sourceSets {
    test {
        java { srcDir "src/test/java" }
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    setArchiveClassifier('universal')
    mergeServiceFiles()
}

reobf {
    shadowJar {
        dependsOn createMcpToSrg
        mappings = createMcpToSrg.output
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    inputs.property "version", project.version
    inputs.property "mcversion", minecraft_version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': minecraft_version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from sourceSets.main.output
    setArchiveClassifier('universal')
    manifest {
        attributes([
                'FMLAT': "${at_file}.cfg"
        ])
    }
}

tasks.assemble.dependsOn('shadowJar')
tasks.jar.finalizedBy('reobfJar')
tasks.shadowJar.dependsOn('reobfJar')